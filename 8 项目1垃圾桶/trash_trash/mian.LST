C51 COMPILER V9.52.0.0   MIAN                                                              03/12/2024 11:26:47 PAGE 1   


C51 COMPILER V9.52.0.0, COMPILATION OF MODULE MIAN
OBJECT MODULE PLACED IN mian.OBJ
COMPILER INVOKED BY: D:\keil\C51\BIN\C51.EXE mian.c BROWSE DEBUG OBJECTEXTEND TABS(2)

line level    source

   1          #include"reg52.h"
   2          #include"intrins.h"
   3          sbit vibrate = P3^2;
   4          
   5          sbit D6       = P1^6;//?????(???),????led2??P3?IO???6?
   6          sbit key3      = P3^5;
   7          sbit trig     = P2^5;
   8          sbit echo     = P2^6;
   9          sbit sg90_con = P2^7;
  10          sbit beep     = P2^0;
  11          sbit remote_con = P2^1;
  12          
  13          int steering_num=0;
  14          int angle=0;
  15          double distance;
  16          double time;
  17          char mark_vibrate = 0;
  18          char angle_bak=2;
  19          
  20          void Delay30ms();
  21          void Delay15us();
  22          void Delay2000ms();
  23          void Delay150ms();
  24          void Delay500ms();
  25          void steering_engine();
  26          void T0init();
  27          void T1init();
  28          double getdistance();
  29          void startHC();
  30          void int0_vibrate();
  31          
  32          void main(){
  33   1        char n;
  34   1        double dis;
  35   1        T0init();
  36   1        T1init();
  37   1        angle = 2;      //?????0?,0.5ms,??1??0.5,???
  38   1        steering_num = 0;
  39   1        EX0 = 1;
  40   1        IT0 = 0;
  41   1        while(1){
  42   2          Delay30ms();
  43   2          dis = getdistance();
  44   2            if(dis <20 ){
  45   3          
  46   3              angle = 4;
  47   3              D6 = 0;
  48   3              beep = 0;
  49   3              for(n=0;n<2;n++)
  50   3                Delay150ms();
  51   3              beep = 1;
  52   3              Delay500ms();
  53   3              steering_num= 1;
  54   3              mark_vibrate =0; 
  55   3              angle_bak = angle;
C51 COMPILER V9.52.0.0   MIAN                                                              03/12/2024 11:26:47 PAGE 2   

  56   3      
  57   3          }else {
  58   3            angle = 2;
  59   3            steering_num= 0;
  60   3            D6 = 1; 
  61   3            angle_bak = angle;
  62   3            Delay30ms();
  63   3          }
  64   2          TH1 = 0;
  65   2          TL1 = 0;
  66   2        }
  67   1      }
  68          void int0_vibrate() interrupt 0
  69          {
  70   1        mark_vibrate = 1;
  71   1      }
  72          void startHC(){
  73   1        trig = 0;
  74   1        trig = 1;
  75   1        Delay15us();
  76   1        trig = 0;
  77   1      }
  78          double getdistance(){
  79   1          startHC();
  80   1          while(echo == 0);
  81   1          TR1 = 1;
  82   1          while(echo == 1);
  83   1          TR1 = 0;
  84   1          time = (TL1+TH1*256)* 1.085;
  85   1          distance = time*0.017;
  86   1          return distance;
  87   1      }
  88          void steering_engine() interrupt 1
  89          {
  90   1        
  91   1        steering_num++;
  92   1        TL0 = 0x33;
  93   1        TH0 = 0xFE;
  94   1        if(steering_num == 1){
  95   2          sg90_con = 1;
  96   2        }
  97   1        if(steering_num == angle){
  98   2          sg90_con = 0;
  99   2        }
 100   1          
 101   1        if(steering_num == 40){
 102   2          steering_num = 0;
 103   2          sg90_con = 0;
 104   2              
 105   2        }
 106   1      }
 107          void T0init(){
 108   1        TMOD &= 0x0f;
 109   1        TMOD |= 0x10;
 110   1        TH1 =0;
 111   1        TL1 =0;
 112   1      }
 113          void T1init(){
 114   1        TMOD &= 0xf0;
 115   1        TMOD |= 0x01;
 116   1        //2 计算需要的时间
 117   1        TL0 = 0x33;
C51 COMPILER V9.52.0.0   MIAN                                                              03/12/2024 11:26:47 PAGE 3   

 118   1        TH0 = 0xFE;
 119   1        TR0 = 1;
 120   1        TF0 = 0;
 121   1        //打开中断
 122   1        ET0 = 1;
 123   1        //打开总线
 124   1        EA = 1;
 125   1      }
 126          void Delay15us()    //@11.0592MHz
 127          {
 128   1        unsigned char i;
 129   1      
 130   1        i = 4;
 131   1        while (--i);
 132   1      }
 133          void Delay30ms()    //@11.0592MHz
 134          {
 135   1        unsigned char i, j;
 136   1      
 137   1        i = 54;
 138   1        j = 199;
 139   1        do
 140   1        {
 141   2          while (--j);
 142   2        } while (--i);
 143   1      }
 144          void Delay2000ms()    //@11.0592MHz
 145          {
 146   1        unsigned char i, j, k;
 147   1      
 148   1        _nop_();
 149   1        i = 15;
 150   1        j = 2;
 151   1        k = 235;
 152   1        do
 153   1        {
 154   2          do
 155   2          {
 156   3            while (--k);
 157   3          } while (--j);
 158   2        } while (--i);
 159   1      }
 160          void Delay500ms()   //@11.0592MHz
 161          {
 162   1        unsigned char i, j, k;
 163   1      
 164   1        _nop_();
 165   1        _nop_();
 166   1        i = 22;
 167   1        j = 3;
 168   1        k = 227;
 169   1        do
 170   1        {
 171   2          do
 172   2          {
 173   3            while (--k);
 174   3          } while (--j);
 175   2        } while (--i);
 176   1      }
 177          void Delay150ms()   //@11.0592MHz
 178          {
 179   1        unsigned char i, j, k;
C51 COMPILER V9.52.0.0   MIAN                                                              03/12/2024 11:26:47 PAGE 4   

 180   1      
 181   1        _nop_();
 182   1        i = 2;
 183   1        j = 13;
 184   1        k = 237;
 185   1        do
 186   1        {
 187   2          do
 188   2          {
 189   3            while (--k);
 190   3          } while (--j);
 191   2        } while (--i);
 192   1      }
 193          
 194          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    368    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     14       5
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
